;--------------------------------------------------
;캐릭터 강화
;수련P를 사용하여 BASE값을 상승시키거나 각인을 지우거나 한다
@CHARA_POWERUP,ARG
#DIM LCOUNT
#DIM CAL_VAR, 2
#DIM MAG_VAR
#DIM BNS_VAR, 17
#DIM ST_UP, 12
#DIM COST_VAR, 13
#DIM SUM_COST
#DIM SUM_PRICE
#DIM MRK_VAR, 5
#DIM CONST BASE수 = 3
#DIM CONST ST수 = 7
#DIM CONST ST시점 = 10
#DIM CONST ST종점 = 14
#DIM CONST 각인수 = 5
;배분 후 보너스 값
#DIM BASE_DIG
;스테이터스 최대 자릿수
#DIMS SH_STR
;캐릭터 관리
#DIM LCHAR
#DIM RCHAR
;--------------------------------
$LOOP_FIRST
REDRAW 0

BASE_DIG = 4
FOR LCOUNT, 0, ST수
	CAL_VAR = LCOUNT
	SIF LCOUNT >= BASE수
		CAL_VAR += ST시점 - BASE수
	STRLENFORM {MAXBASE:ARG:CAL_VAR + 1}
	BASE_DIG = LIMIT(RESULT, BASE_DIG, 100)

	ST_UP:LCOUNT = MAXBASE:ARG:CAL_VAR
NEXT

;기본 수련P 소비량
LOCAL:99 = 50

$LOOP_CHARA_POWERUP
RESULT = ARG
IF RESULT == 999
ELSE
	LOCAL:99 = TARGET
	TARGET = RESULT
	PRINTFORML %CALLNAME:TARGET%을(를) 선택했습니다.
	;부위 결계의 상한 설정
	CALL BASEUP_CAL_SHIELD, TARGET
	;자기보다 왼쪽에 CFLAG:0 == 0 인 캐릭터가 있는가
	LCHAR = 0
	FOR LOCAL,0,TARGET
		SIF LOCAL == MASTER
			CONTINUE
		SIF TARGET == 1
			CONTINUE
		SIF CFLAG:LOCAL:999 == 0
			CONTINUE
		SIF CFLAG:LOCAL:0 == 0
			LCHAR = LOCAL
	NEXT
	;자기보다 오른쪽에 CFLAG:0 == 0 인 캐릭터가 있는가
	RCHAR = 0
	FOR LOCAL,TARGET+1,CHARANUM
		SIF LOCAL == MASTER
			CONTINUE
		SIF CFLAG:LOCAL:999 == 0
			CONTINUE
		IF CFLAG:LOCAL:0 == 0
			RCHAR = LOCAL
			BREAK
		ENDIF
	NEXT
	
	;강화 처리
	$LOOP_CHARA_POWERUP_HOWDO
	PRINTL 
	PRINTFORML %CALLNAME:TARGET%의 %PALAMNAME:20%  {JUEL:수련P}P
	DRAWLINE

	;총 필요 수련값 계산
	SUM_COST = 0
	FOR LCOUNT, 0, ST수 + 각인수
		SUM_COST += COST_VAR:LCOUNT
	NEXT
	FOR LCOUNT, 0, 감각수
		SIF BNS_VAR:(LCOUNT + ST수 + 각인수) == 1
			SUM_COST += 30
	NEXT
	SUM_COST += COST_VAR:12

	CAL_VAR = BASE_DIG / 2
	PRINTFORML 　　 %UNICODE(0x2000) * CAL_VAR% 강화 후 %UNICODE(0x2000) * BASE_DIG% 기초치　 소비 수련P
	MAG_VAR = 50
	FOR LCOUNT, 0, ST수
		;BASE값 표시
		CAL_VAR:0 = LCOUNT
		SIF LCOUNT >= BASE수
			CAL_VAR:0 += ST시점 - BASE수
		PRINTFORM %BASENAME:(CAL_VAR:0), 6, LEFT%：
		SIF ST_UP:LCOUNT > MAXBASE:(CAL_VAR:0)
			SETCOLOR 255, 255, 0
		RESULTS = {ST_UP:LCOUNT, MIN(BASE_DIG,5),RIGHT}
		PRINTFORM %RESULTS,7,LEFT%
		RESETCOLOR
		;기초값의 변동
		PRINTFORM \@ LCOUNT < BASE수  ? {BASE:(CAL_VAR:0 + 50) + FEAT_BONUS_F(TARGET,LCOUNT), BASE_DIG} # {BASE:(CAL_VAR:0) + FEAT_BONUS_F(TARGET,LCOUNT), BASE_DIG} \@ → 
		PRINTFORM \@ LCOUNT < BASE수  ? {BASE:(CAL_VAR:0 + 50) + FEAT_BONUS_F(TARGET,LCOUNT) + BNS_VAR:LCOUNT * MAG_VAR, BASE_DIG} # {BASE:(CAL_VAR:0) + FEAT_BONUS_F(TARGET,LCOUNT) + BNS_VAR:LCOUNT * MAG_VAR, BASE_DIG} \@（{COST_VAR:LCOUNT, 4}）
		PRINTPLAIN  

		;2단계 다운
		SETCOLOR 240, 240, 255
		SIF BNS_VAR:LCOUNT < 2
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10, 2}]-{MAG_VAR * 2, 3}
		PRINTPLAIN  　 

		;1단계 다운
		SETCOLOR 240, 240, 255
		SIF BNS_VAR:LCOUNT < 1
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10 + 1, 2}]-{MAG_VAR * 1, 3}
		PRINTPLAIN  　 

		;1단계 업
		SETCOLOR 240, 240, 255
		SIF SUM_COST + 50 > JUEL:수련P
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10 + 2, 2}]+{MAG_VAR * 1, 3}
		RESETCOLOR
		PRINTPLAIN  　 

		;2단계 업
		SETCOLOR 240, 240, 255
		SIF SUM_COST + 100 > JUEL:수련P
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT * 10 + 3, 2}]+{MAG_VAR * 2, 3}
		RESETCOLOR
		PRINTL 
		SIF LCOUNT == 1
			MAG_VAR = 5
		SIF LCOUNT == 2
			PRINTL 
	NEXT
	PRINTL 

	;각인 소거
	SH_STR = 각인　：　
	FOR LCOUNT, 0, 각인수

		;각인의 소거에 드는 비용 계산
		;기본값
		CAL_VAR = (MARK:(LCOUNT) - BNS_VAR:(LCOUNT + 7)) * 100
		IF LCOUNT == 0
			CAL_VAR:1 = 13
		ELSEIF LCOUNT == 1
			CAL_VAR:1 = 16
		ELSEIF LCOUNT == 2
			CAL_VAR:1 = 14
		ELSEIF LCOUNT == 3
			CAL_VAR:1 = 17
		ELSEIF LCOUNT == 4
			CAL_VAR:1 = 15
		ELSE
			CAL_VAR:1 = 0
		ENDIF
		;이중으로 성격 보정을 건다
		MRK_VAR:LCOUNT = SEIKAKU_HOSEI_PALAM_F(SEIKAKU_CHECK_F(TARGET), CAL_VAR:1, SEIKAKU_HOSEI_PALAM_F(SEIKAKU_CHECK_F(TARGET), CAL_VAR:1, CAL_VAR))

		PRINTFORM %SH_STR%%MARKNAME:LCOUNT%　
		SIF BNS_VAR:(LCOUNT + ST수)
			SETCOLOR 255, 255, 0
 		CAL_VAR = MARK:LCOUNT - BNS_VAR:(LCOUNT + ST수)
		;각인을「*」별표로 표시
		PRINTFORM [%UNICODE(0x002A) * CAL_VAR%%UNICODE(0x002E) * (5 - CAL_VAR)%]
		RESETCOLOR
		PRINTFORM （{COST_VAR:(LCOUNT + ST수), 4}）
		PRINTPLAIN  

		CAL_VAR = 0
			CAL_VAR = (MARK:(LCOUNT) == 0) || (MARK:(LCOUNT) == BNS_VAR:(LCOUNT + ST수)) || (SUM_COST + MRK_VAR:LCOUNT) > JUEL:수련P
		;버튼 표시
		SETCOLOR 240, 240, 255
		SIF CAL_VAR
			SETCOLOR 128, 128, 128
		PRINTFORM [{LCOUNT + 70}] 

		;각인 표시
		PRINTFORM {MARK:LCOUNT - BNS_VAR:(LCOUNT + ST수)} → {LIMIT((MARK:LCOUNT - BNS_VAR:(LCOUNT + ST수) - 1), 0, 5)}　　

		;필요 수련P 표시
		PRINTFORM +{MRK_VAR:LCOUNT, 4}
		RESETCOLOR

		SH_STR = 　　　　　
		SETCOLOR 240, 240, 255
		SIF BNS_VAR:7 + BNS_VAR:8 + BNS_VAR:9 + BNS_VAR:10 + BNS_VAR:11 == 0
			SETCOLOR 128, 128, 128
		;마지막 행만「해제」를 표시
		SIF LCOUNT == 각인수 - 1
			PRINT 　　　　　　　　[79] 해제
		RESETCOLOR
		PRINTL 
	NEXT

	;결계 재구축
	;어느 하나를 소질로 가지고 있는 경우에만 표시
	IF TALENT:C결계 + TALENT:V결계 + TALENT:A결계 + TALENT:B결계
		PRINTL 
		SH_STR = 결계　：　
		FOR LCOUNT, 0, 감각수
				CAL_VAR = LCOUNT + ST수 + 각인수
			IF TALENT:(LCOUNT + 190)
				PRINTFORM %SH_STR%%TALENTNAME:(LCOUNT + 190)% 재구축　 （  \@BNS_VAR:CAL_VAR == 1 ? {30, 2} # {0, 2}\@）
				PRINTPLAIN  
				SETCOLOR 240, 240, 255
				SIF BASE:(LCOUNT + 30) == MAXBASE:(LCOUNT + 30) || SUM_COST + 30 > JUEL:수련P || BNS_VAR:CAL_VAR == 2
					SETCOLOR 128, 128, 128
				SIF BNS_VAR:CAL_VAR == 1
					SETCOLOR 255, 255, 0
				PRINTFORM [{LCOUNT + 80}]

				CALL PERCENT_CAL, BASE:(LCOUNT + 30), MAXBASE:(LCOUNT + 30)
				CAL_VAR:0 = LIMIT(255 - RESULT * RESULT * 4 / 200, 0, 255)
				CAL_VAR:1 = LIMIT(-215 - RESULT * RESULT / 100 + RESULT * 5, 0, 255)
				IF BNS_VAR:(LCOUNT + ST수 + 각인수)
					CAL_VAR:0 = 255
					CAL_VAR:1 = 255
				ENDIF
				;자금을 사용하여 재구축하는 경우
				IF BASE:(LCOUNT + 30) > 0
					CALL COLOR_BAR(BASE:(LCOUNT + 30),MAXBASE:(LCOUNT + 30),20,CAL_VAR:0,CAL_VAR:1,20,-160,6,32,20,1,UNICODE(0x25AE),UNICODE(0x25AE))
				ELSE
					SETCOLOR 128, 40, 40
						PRINT 　　　붕　괴　　　　
					RESETCOLOR
				ENDIF
				SETCOLOR 240, 240, 255
				SIF BASE:(LCOUNT + 30) == MAXBASE:(LCOUNT + 30) || BNS_VAR:(LCOUNT + ST수 + 각인수) == 1 || SUM_PRICE + ABL:레벨 * 625 > MONEY
					SETCOLOR 128, 128, 128
				SIF BNS_VAR:(LCOUNT + ST수 + 각인수) == 2
					SETCOLOR 255, 255, 0
				PRINTFORM [{LCOUNT + 85}] ${ABL:레벨 * 625, 5}
				SH_STR = 　　　　　
				RESETCOLOR
				;마지막 행만「해제」를 표시
				FOR CAL_VAR, 0, 감각수
					SIF TALENT:(감각수 + 189 - CAL_VAR)
						BREAK
				NEXT
				SETCOLOR 240, 240, 255
				SIF BNS_VAR:12 + BNS_VAR:13 + BNS_VAR:14 + BNS_VAR:15 == 0
					SETCOLOR 128, 128, 128
				SIF LCOUNT == 감각수 - CAL_VAR
					PRINT  [89] 해제
				RESETCOLOR
				PRINTL 
			ENDIF
		NEXT
	ENDIF

	;결계 획득
	PRINTL 
	PRINTFORM           결계 획득  　　 （{COST_VAR:12, 4}
	PRINTPLAIN ） 
	LOCAL = 0
	FOR LCOUNT, 0, 감각수
		SIF GETBIT(BNS_VAR:16, LCOUNT) || TALENT:(LCOUNT + 190)
			LOCAL += 1
	NEXT
	SIF GETBIT(BNS_VAR:16, 감각수) || TALENT:피임결계 > 0
		LOCAL += 1
	FOR LCOUNT, 0, 감각수
		SIF LOCAL > 2
			SETCOLOR 128,128,128
		SIF LCOUNT == 1 && (GETBIT(BNS_VAR:16, 감각수) || TALENT:피임결계 > 0)
			SETCOLOR 128,128,128
		SIF TALENT:(LCOUNT + 190)
			SETCOLOR 80, 255, 80
		SIF GETBIT(BNS_VAR:16, LCOUNT)
			SETCOLOR 255, 255, 0
		PRINTFORM [{LCOUNT + 90}]%TALENTNAME:(LCOUNT + 190)%　
		RESETCOLOR
	NEXT
	SIF LOCAL > 2
		SETCOLOR 128,128,128
	SIF (GETBIT(BNS_VAR:16, 1) || TALENT:V결계 > 0)
		SETCOLOR 128,128,128
	SIF TALENT:피임결계 > 0
		SETCOLOR 80, 255, 80
	SIF GETBIT(BNS_VAR:16, 감각수)
		SETCOLOR 255, 255, 0
	PRINTFORM [94] 피임결계　
	RESETCOLOR
	PRINTL 

	DRAWLINE
	PRINT [100] 결정　
	PRINTPLAIN 　　　　　　
	PRINTFORML 합 계{SUM_COST, 5} / {JUEL:수련P, 5}　　　　　자 금{SUM_PRICE, 5} / {MONEY}
	PRINT [200] 모두 해제
	PRINTPLAIN 　　　　　
	IF LCHAR
		PRINT [300] 이전 캐릭터
	ELSE
		PRINT                
	ENDIF
	PRINTPLAIN 　　　　　　 
	IF RCHAR
		PRINT [500] 다음 캐릭터
	ELSE
		PRINT                
	ENDIF

	PRINTL 
	PRINTL [999] 돌아간다
	
	$INPUT_LOOP_CHARA_POWERUP
	INPUT
	IF RESULT == 999
		TARGET = LOCAL:99
		VARSET ST_UP
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
		RETURN
	ENDIF
	CLEARLINE 26
	CAL_VAR = TALENT:C결계 + TALENT:V결계 + TALENT:A결계 + TALENT:B결계 + 1
	SIF CAL_VAR > 1
		CLEARLINE CAL_VAR

	;디버그 모드
	IF RESULT == 400
		INVERTBIT FLAG:999, 0
		IF FLAG:999 == 1
			SETBGCOLOR 0,0,40
		ELSE
			RESETBGCOLOR
		ENDIF
		GOTO LOOP_CHARA_POWERUP
	;BASE값 다운 * 2
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 0
		CAL_VAR = RESULT / 10
		IF BNS_VAR:CAL_VAR >= 2
			BNS_VAR:CAL_VAR -= 2
			COST_VAR:CAL_VAR -= 100
		ENDIF
	;BASE값 다운
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 1
		CAL_VAR = RESULT / 10
		IF BNS_VAR:CAL_VAR >= 1
			BNS_VAR:CAL_VAR -= 1
			COST_VAR:CAL_VAR -= 50
		ENDIF
	;BASE값 업
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 2
		CAL_VAR = RESULT / 10
		IF JUEL:수련P >= SUM_COST + 50
			BNS_VAR:CAL_VAR += 1
			COST_VAR:CAL_VAR += 50
		ENDIF
	;BASE값 업 * 2
	ELSEIF RESULT < 70 && RESULT >= 0 && RESULT % 10 == 3
		CAL_VAR = RESULT / 10
		IF JUEL:수련P >= SUM_COST + 100
			BNS_VAR:CAL_VAR += 2
			COST_VAR:CAL_VAR += 100
		ENDIF
	;각인 소거
	ELSEIF RESULT < 70 + 각인수 && RESULT >= 70
		CAL_VAR = RESULT % 10 + ST수
		IF MARK:(RESULT % 10) - BNS_VAR:CAL_VAR > 0 && JUEL:수련P >= SUM_COST + MRK_VAR:(RESULT % 10)
			COST_VAR:CAL_VAR += MRK_VAR:(RESULT % 10)
			BNS_VAR:CAL_VAR += 1
		ENDIF
	;각인 소거의 해제
	ELSEIF RESULT == 79
		FOR LCOUNT, 0, 각인수
			CAL_VAR = LCOUNT + ST수
			COST_VAR:CAL_VAR = 0
			BNS_VAR:CAL_VAR = 0
		NEXT
	;결계 재구축: 수련P
	ELSEIF RESULT < 80 + 감각수 && RESULT >= 80
		CAL_VAR = RESULT % 10 + ST수 + 각인수
		IF BNS_VAR:CAL_VAR == 1
			BNS_VAR:CAL_VAR = 0
		ELSEIF JUEL:수련P >= SUM_COST + 30 && BASE:(RESULT % 10 + 30) < MAXBASE:(RESULT % 10 + 30)
			SIF BNS_VAR:CAL_VAR == 2
				SUM_PRICE -= ABL:레벨 * 625
			BNS_VAR:CAL_VAR = 1
		ENDIF
	;결계 재구축: 자금
	ELSEIF RESULT < 85 + 감각수 && RESULT >= 85
		CAL_VAR = RESULT % 10 + ST수 + 각인수 - 5
		IF BNS_VAR:CAL_VAR == 2
			BNS_VAR:CAL_VAR = 0
			SUM_PRICE -= ABL:레벨 * 625
		ELSEIF MONEY >= SUM_PRICE + ABL:레벨 * 625 && BASE:(RESULT % 10 + 25) < MAXBASE:(RESULT % 10 + 25)
			BNS_VAR:CAL_VAR = 2
			SUM_PRICE += ABL:레벨 * 625
		ENDIF
	;결계 재구축의 해제
	ELSEIF RESULT == 89
		FOR LCOUNT, 0, 감각수
			CAL_VAR = LCOUNT + ST수 + 각인수
			BNS_VAR:CAL_VAR = 0
		NEXT
		SUM_PRICE = 0
	;결계 획득
	ELSEIF RESULT < 90 + 감각수 && RESULT >= 90
		CAL_VAR = RESULT % 10
		IF GETBIT(BNS_VAR:16, CAL_VAR)
			CLEARBIT BNS_VAR:16, CAL_VAR
		ELSE
			CAL_VAR:1 = 0
			FOR LCOUNT, 0, 감각수
				SIF GETBIT(BNS_VAR:16, LCOUNT) || TALENT:(LCOUNT + 190)
					CAL_VAR:1 += 1
			NEXT
			SIF GETBIT(BNS_VAR:16, 감각수) || TALENT:피임결계 > 0
				CAL_VAR:1 += 1
			IF CAL_VAR == 1 && (GETBIT(BNS_VAR:16, 감각수) || TALENT:피임결계 > 0)
			ELSEIF CAL_VAR:1 < (감각수 - 1 - (CHARATALENT_F(TARGET,0,"남자") > 0 || CHARATALENT_F(TARGET,1,"남자") > 0)) && TALENT:(CAL_VAR + 190) == 0 && JUEL:수련P >= SUM_COST + 50
				SETBIT BNS_VAR:16, CAL_VAR
			ENDIF
		ENDIF
		COST_VAR:12 = 0
		FOR LCOUNT, 0, 감각수
			SIF GETBIT(BNS_VAR:16, LCOUNT)
				COST_VAR:12 += 1
		NEXT
		SIF GETBIT(BNS_VAR:16, 감각수)
			COST_VAR:12 += 1
		COST_VAR:12 *= 50
	;피임결계
	ELSEIF RESULT == 94 && TALENT:V결계 == 0
		CAL_VAR = 감각수
		IF GETBIT(BNS_VAR:16, CAL_VAR)
			CLEARBIT BNS_VAR:16, CAL_VAR
		ELSE
			CAL_VAR:1 = 0
			FOR LCOUNT, 0, 감각수
				SIF GETBIT(BNS_VAR:16, LCOUNT) || TALENT:(LCOUNT + 190)
					CAL_VAR:1 += 1
			NEXT
			SIF GETBIT(BNS_VAR:16, 감각수) || TALENT:피임결계 > 0
				CAL_VAR:1 += 1
			IF (GETBIT(BNS_VAR:16, 1) || TALENT:V결계 > 0)
			ELSEIF CAL_VAR:1 < (감각수 - 1 - (CHARATALENT_F(TARGET,0,"남자") > 0 || CHARATALENT_F(TARGET,1,"남자") > 0)) && TALENT:피임결계 == 0 && JUEL:수련P >= SUM_COST + 50 
				SETBIT BNS_VAR:16, CAL_VAR
			ENDIF
		ENDIF
		COST_VAR:12 = 0
		FOR LCOUNT, 0, 감각수
			SIF GETBIT(BNS_VAR:16, LCOUNT)
				COST_VAR:12 += 1
		NEXT
		SIF GETBIT(BNS_VAR:16, 감각수)
			COST_VAR:12 += 1
		COST_VAR:12 *= 50
		
	;결정
	ELSEIF RESULT == 100
		;BASE값 상승
		FOR LCOUNT, 0, ST수
			MAG_VAR = 5
			SIF LCOUNT < 2
				MAG_VAR = 50
			IF LCOUNT < BASE수
				BASE:(LCOUNT + 50) += BNS_VAR:LCOUNT * MAG_VAR
			ELSE
				BASE:(LCOUNT + ST시점 - BASE수) += BNS_VAR:LCOUNT * MAG_VAR
			ENDIF
		NEXT
		;각인 소거
		FOR LCOUNT, 0, 각인수
			CAL_VAR = LCOUNT + ST수
			SIF BNS_VAR:CAL_VAR > 0 && MARK:(90 + LCOUNT) < MARK:LCOUNT
				MARK:(90 + LCOUNT) = MARK:LCOUNT
			MARK:LCOUNT -= BNS_VAR:CAL_VAR
		NEXT
		;결계 재구축
		FOR LCOUNT, 0, 감각수
			CAL_VAR = LCOUNT + ST수 + 각인수
			SIF BNS_VAR:CAL_VAR
				BASE:(LCOUNT + 30) = MAXBASE:(LCOUNT + 30)
		NEXT
		;결계 획득
		FOR LCOUNT, 0, 감각수
			IF GETBIT(BNS_VAR:16, LCOUNT)
				TALENT:(LCOUNT + 190) = 1
				;부위 결계 설정
				MAXBASE:(LCOUNT + 30) = CAL_SHIELD_F(TARGET)
				BASE:(LCOUNT + 30) = MAXBASE:(LCOUNT + 30)
			ENDIF
		NEXT
		IF GETBIT(BNS_VAR:16, 감각수)
			TALENT:피임결계 = 1
		ENDIF
		JUEL:수련P -= SUM_COST
		MONEY -= SUM_PRICE
		CALL LEVELSTATUS, TARGET
		CALL BASEUP_CAL_SHIELD, TARGET
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
	;모두 해제
	ELSEIF RESULT == 200
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
	ELSEIF RESULT == 300 && LCHAR
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
		ARG = LCHAR
		GOTO LOOP_FIRST
	ELSEIF RESULT == 500 && RCHAR
		VARSET BNS_VAR
		VARSET COST_VAR
		VARSET SUM_PRICE
		ARG = RCHAR
		GOTO LOOP_FIRST
	ENDIF

	;임시 스테이터스 설정
	FOR LCOUNT, 0, ST수
		MAG_VAR = 50
		SIF LCOUNT > 1
			MAG_VAR = 5
		CAL_VAR:0 = LCOUNT + ST시점 - BASE수
		CAL_VAR:1 = BASE:(CAL_VAR:0) + BNS_VAR:LCOUNT * MAG_VAR
		IF LCOUNT < BASE수
			CAL_VAR:0 = LCOUNT
			CAL_VAR:1 = BASE:(LCOUNT + 50) + BNS_VAR:LCOUNT * MAG_VAR
		ENDIF
		IF CAL_VAR:0 == 0 || CAL_VAR:0 == 1
			ST_UP:LCOUNT = LEVELSTATUS_UP(CAL_VAR:1 + FEAT_BONUS_F(TARGET,LCOUNT), ABL:레벨, 400+(CAL_VAR:1-1000)/5, 99999)
		ELSEIF CAL_VAR:0 == 2
			ST_UP:LCOUNT = LEVELSTATUS_UP(CAL_VAR:1 + FEAT_BONUS_F(TARGET,LCOUNT), ABL:레벨 / 3 + 1, 10+(CAL_VAR:1-100)/2,9999)
		ELSE
			ST_UP:LCOUNT = LEVELSTATUS_UP(CAL_VAR:1 + FEAT_BONUS_F(TARGET,LCOUNT), ABL:레벨, 50, 9999)
		ENDIF
	NEXT

	GOTO LOOP_CHARA_POWERUP
ENDIF
PRINTL 

