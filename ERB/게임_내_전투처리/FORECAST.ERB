;--------------------------------------------------
@ATTACK_PLACE_DECISION
#DIM CHISEI_CAL
#DIM CCOUNT
;촉수/적의 공격 장소를 결정

$SELECT_LOOP
;행동마다 다음 턴의 공격 장소를 결정
IF TFLAG:10 == 1
	IF RAND:2 == 0
		TFLAG:11 |= 1
	ELSE
		IF TALENT:근거리특기 && RAND:3 == 0
			TFLAG:11 |= 1
		ENDIF
	ENDIF

	IF RAND:2 == 0
		TFLAG:11 |= 2
	ELSE
		IF TALENT:중거리특기 && RAND:3 == 0
			TFLAG:11 |= 2
		ENDIF
	ENDIF

	IF RAND:2 == 0
		TFLAG:11 |= 4
	ELSE
		IF TALENT:원거리특기 && RAND:3 == 0
			TFLAG:11 |= 4
		ENDIF
	ENDIF
	IF RAND:10 == 0
		TFLAG:11 |= 8
	ELSE
		IF TALENT:공중전특기 && RAND:8 == 0
			TFLAG:11 |= 8
		ENDIF
	ENDIF
;악질 시민전
ELSEIF FLAG:73 > 0
	TFLAG:11 |= 1
	SIF RAND:4 == 0
		TFLAG:11 |= 2
ELSEIF TFLAG:10 == 2 || TFLAG:10 == 5
	SIF RAND:4 == 0
		TFLAG:11 |= 1
	SIF RAND:4 == 0
		TFLAG:11 |= 2
	SIF RAND:4 == 0
		TFLAG:11 |= 4
	SIF RAND:10 == 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 3
	SIF RAND:3 != 0
		TFLAG:11 |= 1
	SIF RAND:4 != 0
		TFLAG:11 |= 2
	SIF RAND:5 != 0
		TFLAG:11 |= 4
	SIF RAND:10 == 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 6
	SIF RAND:5 != 0
		TFLAG:11 |= 1
	SIF RAND:4 != 0
		TFLAG:11 |= 2
	SIF RAND:3 != 0
		TFLAG:11 |= 4
	SIF RAND:10 == 0
		TFLAG:11 |= 8
ELSE
ENDIF

;【아무것도안한다】일 경우에는 무조건 잡힌다
IF TCVARn:0 == 1 && TCVARn:2 == 자세：아무것도안한다
	TFLAG:11 |= 1
ELSEIF TCVARn:0 == 2 && TCVARn:2 == 자세：아무것도안한다
	TFLAG:11 |= 2
ELSEIF TCVARn:0 == 3 && TCVARn:2 == 자세：아무것도안한다
	TFLAG:11 |= 4
ELSEIF GETBIT(TCVARn:216, 1) && TCVARn:2 == 자세：아무것도안한다
	TFLAG:11 |= 8
ENDIF
;기절・쓰러짐 중에 확정적으로 피격되는 설정이 ON일 경우
IF CONFIG_CHECK_BALANCE_F(8) && ((TCVARn:12 & 기절) || (TCVARn:12 & 쓰러짐))
	SIF TCVARn:0 == 1
		TFLAG:11 |= 1
	SIF TCVARn:0 == 2
		TFLAG:11 |= 2
	SIF TCVARn:0 == 3
		TFLAG:11 |= 4
ENDIF


;공격 장소의 수를 산출
SIF (TFLAG:11 & 1) == 1
	TFLAG:12 ++
SIF (TFLAG:11 & 2) == 2
	TFLAG:12 ++
SIF (TFLAG:11 & 4) == 4
	TFLAG:12 ++
;공격 장소가 설정되어 있지 않다면 루프에서 재설정을 한다
SIF TFLAG:12 == 0 && TFLAG:10 != 4
	GOTO SELECT_LOOP

;대공 공격 설정
;악질 시민은 대공을 행하지 않는다. 애초에 일반인이 총이나 미사일을 쏘는 게 아닌 이상 가능할까?
IF FLAG:11 == 1150
ELSEIF TFLAG:10 == 1
	IF RAND:4 == 0
		TFLAG:11 |= 8
	ELSE
		IF TALENT:공중전특기 && RAND:4 == 0
			TFLAG:11 |= 8
		ENDIF
	ENDIF
ELSEIF TFLAG:10 == 2 || TFLAG:10 == 5
	SIF RAND:5 == 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 3
	SIF RAND:3 != 0
		TFLAG:11 |= 8
ELSEIF TFLAG:10 == 6
	SIF RAND:5 == 0
		TFLAG:11 |= 8
ELSE
ENDIF
;공중에 있지 않은 경우, 50% 확률로 대공 범위를 제외
SIF GETBIT(TCVARn:216, 1) == 0 && RAND:2 == 0
	CLEARBIT TFLAG:11, 3
;전체 공격일 경우, 75% 확률로 대공 범위를 제외
SIF TFLAG:12 == 3 && RAND:4 != 0
	CLEARBIT TFLAG:11, 3

;예측 성패 판정
LOCAL:0 = MAXBASE:지성

;【관찰한다】에 의한 예측 정확도 상승
SIF TFLAG:25 > 0
	LOCAL:0 = LOCAL:0 * 3 / 2 + 25

;관찰한다 효과 초기화
TFLAG:25 = 0

;기력에 따른 보정
CALL PERCENT_CAL, BASE:기력 * 2, MAXBASE:기력
IF RESULT < 100
	LOCAL:0 = LOCAL:0 * (RESULT + 300) /400
ENDIF

;의상에 따른 보정
CALL CLOTH_BATTLE_HOSEI, "CHISEI"
LOCAL:0 = LOCAL:0 * RESULT / 100

;심경에 따른 보정
CALL SHINKYOU_CHECK, "CHISEI", LOCAL:0
LOCAL:0 = RESULT

;전투 지원에 의한 보정
CALL CALC_CHISEI_SHIEN(0)
LOCAL:0 += RESULT

;보스 촉수/적 캐릭터의 지성
IF ENEMY_TYPE_CHECK_F("AKUOTI")
	LOCAL:1 = MAXBASE:(FLAG:111):지성
ELSE
	CALL TENTACLE_ACCESS, "CHISEI"
	LOCAL:1 = RESULT
ENDIF
;캐릭터의 지성(보정O) + 보스•적 캐릭터의 지성
LOCAL:2 = LOCAL:0 + LOCAL:1
LOCAL:3 = 160 * LOCAL:0 / LOCAL:2 + 96

IF FLAG:999 == 1
	PRINTFORML PC 지성：{LOCAL:0}(보정 전 {MAXBASE:지성})
	PRINTFORML 적 지성：{LOCAL:1}
	PRINTFORML {LOCAL:3} / 256（{100 * LOCAL:3 / 256}％）    펌블치 {(256 - LOCAL:3) / 4}（{(256 - LOCAL:3) * 25 / 256}％）
ENDIF

;펌블, 대충 대실패라는 의미
;지략 스타일인 거리에서는 펌블이 나지 않는다(밸런스 패치로 삭제)
IF RAND:256 < (256 - LOCAL:3) / 4 && SELECTCOM != 7 && GETBIT(TCVARn:217, 0) == 0
	SIF FLAG:999 == 1
		PRINTFORML 예측 펌블！（다음 턴에 모든 거리의 행동 예측이 실패한다）
	TCVARn:30 = -1
	TCVARn:31 = -1
	TCVARn:32 = -1
ENDIF
;예측 수치 결정
FOR LOCAL:5, 0, 3
	IF RAND:256 < LOCAL:3
		CALL INT_EVAL, LOCAL:0, LOCAL:1
		CALL INVERSION_PROBABILITY, GETBIT(TFLAG:11, LOCAL:5), RESULT
		TCVARn:(LOCAL:5 + 30) = RESULT
	ELSE
		TCVARn:(LOCAL:5 + 30) = -1
	ENDIF
NEXT
;공중의 예측은 다른 기준
IF RAND:256 < LOCAL:3
	CALL INT_EVAL, LOCAL:0 * 2, LOCAL:1
	CALL INVERSION_PROBABILITY, GETBIT(TFLAG:11, 3), RESULT
	TCVARn:33 = RESULT
ELSE
	TCVARn:33 = -1
ENDIF
;--------------------------------------------------
@MAJORITY_VOTING_PROBABILITY, ARG:0, ARG:1, ARG:2
;확률 결정
;ARG:0	결과（0 or 1）
;ARG:1	확률의 편향(偏り)（(128 ± n) / 256）
;ARG:2	확률의 편향(偏り)（(128 ± n) / 256）
LOCAL:0 = 128 - ARG:1
SIF ARG:0
	LOCAL:0 += ARG:1 * 2
LOCAL:0 += ARG:2

DO
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 1, LOCAL:0
	LOCAL:1 = RESULT
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 2, LOCAL:0
	LOCAL:1 += RESULT
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 3, LOCAL:0
	LOCAL:1 += RESULT
	CALL MAJORITY_VOTING_PROBABILITY_NUM, 4, LOCAL:0
	LOCAL:1 += RESULT
LOOP (ARG:0 == 0 && (LOCAL:1 == 10)) || (ARG:0 > 0 && (LOCAL:1 == 0))

RETURN LOCAL:1



;--------------------------------------------------
@MAJORITY_VOTING_PROBABILITY_NUM ,ARG:0 ,ARG:1
;ARG:0	시행 횟수
;ARG:1	확률 (N / 256)

$SAME_RESULT

LOCAL:0 = 0
LOCAL:1 = 0
REPEAT ARG:0
	IF RAND:256 < ARG:1
		LOCAL:0 += 1
	ELSE
		LOCAL:1 += 1
	ENDIF
REND

IF LOCAL:0 == LOCAL:1
	GOTO SAME_RESULT
ELSEIF LOCAL:0 > LOCAL:1
	RETURN ARG:0
ELSE
	RETURN 0
ENDIF



;--------------------------------------------------
@PRINT_FORECAST
;확률 표시
RESETCOLOR

LOCAL = TCVARn:30
SIF TCVARn:0 == 0
	LOCAL = 0
PRINT 근:
CALL FORECAST_OUTPUT_NUM, LOCAL
PRINT  %

LOCAL = TCVARn:31
SIF TCVARn:0 == 0
	LOCAL = 0
PRINT  중:
CALL FORECAST_OUTPUT_NUM, LOCAL
PRINT  %

LOCAL = TCVARn:32
SIF TCVARn:0 == 0
	LOCAL = 0
PRINT  원:
CALL FORECAST_OUTPUT_NUM, LOCAL
PRINT  %
SIF FLAG:999 == 1 && TCVARn:30 == -1 && TCVARn:31 == -1 && TCVARn:32 == -1 && TCVARn:0 != 0
	PRINT （예측 펌블！）

;공중 예측 확률은 STATUS_TRAIN 에서 따로 FORECAST_OUTPUT_NUM 함수를 호출하고 있다

	;전투 지원에 따른 보정률
	CALL CALC_CHISEI_SHIEN(0)
	LOCAL:0 = RESULT

	IF ENEMY_TYPE_CHECK_F("AKUOTI")
		LOCAL:1 = MAXBASE:(FLAG:111):지성
	ELSE
		CALL TENTACLE_ACCESS, "CHISEI"
		LOCAL:1 = RESULT
	ENDIF
	LOCAL:2 = 160 * (MAXBASE:지성 + LOCAL:0) / (MAXBASE:지성 + LOCAL:0 + LOCAL:1) + 96
	PRINT 　예측 정확도：
	FONTBOLD
	IF TCVARn:0 == 0
		SETCOLOR 105,105,105
		PRINT －
	ELSEIF LOCAL:2 >= 220
		SETCOLOR 250,250,0
		PRINT Ｓ
	ELSEIF LOCAL:2 >= 200
		SETCOLOR 250,90,0
		PRINT Ａ
	ELSEIF LOCAL:2 >= 160
		SETCOLOR 0,120,250
		PRINT Ｂ
	ELSEIF LOCAL:2 >= 120
		SETCOLOR 0,250,120
		PRINT Ｃ
	ELSEIF LOCAL:2 >= 80
		SETCOLOR 250,0,250
		PRINT Ｄ
	ELSE
		SETCOLOR 120,120,120
		PRINT Ｅ
	ENDIF
	FONTREGULAR
	RESETCOLOR


;--------------------------------------------------
;예측률에 따른 채색된 숫자 표시
@FORECAST_OUTPUT_NUM, ARG
;ARG	확률（n / 100）
;　　　　단 불명인 경우(예측 실패)에는 -1

SIF TCVARn:0 == 0
	ARG=-1

;확률에 따른 채색
CALL FORECAST_OUTPUT_SETCOLOR(ARG)

IF TCVARn:0 == 0
	PRINT  ―
ELSEIF ARG == -1
	PRINT  ？
ELSE
	PRINTFORM {ARG, 3}
ENDIF
RESETCOLOR
;↑위에서 사용할 색 지정
@FORECAST_OUTPUT_SETCOLOR(ARG,ARGS)
	IF ARGS=="COM"
		IF ARG == -1
			SETCOLOR 128, 128, 128
		ELSE
			IF ARG <= 60
				LOCAL:0 = 0
			ELSE
				LOCAL:0 = LIMIT(-105 + 40 * ARG / 10, 55, 255)
			ENDIF
			IF ARG <= 50
				LOCAL:1 = LIMIT(55 + 40 * ARG / 10, 55, 255)
			ELSEIF ARG >= 80
				LOCAL:1 = 0
			ELSE
				LOCAL:1 = LIMIT(455 - 35 * ARG / 10, 55, 255)
			ENDIF
			IF ARG >= 40
				LOCAL:2 = 0
			ELSE
				LOCAL:2 = LIMIT(255 - 40 * ARG / 10, 55, 255)
			ENDIF
			SETCOLOR LOCAL:0, LOCAL:1, LOCAL:2
		ENDIF
	ELSE
		IF ARG == -1
			SETCOLOR 48, 48, 48
		ELSE
			IF ARG <= 60
				LOCAL:0 = 0
			ELSE
				LOCAL:0 = LIMIT(-105 + 40 * ARG / 10, 55, 255)
			ENDIF
			IF ARG <= 50
				LOCAL:1 = LIMIT(55 + 40 * ARG / 10, 55, 255)
			ELSEIF ARG >= 80
				LOCAL:1 = 0
			ELSE
				LOCAL:1 = LIMIT(455 - 35 * ARG / 10, 55, 255)
			ENDIF
			IF ARG >= 40
				LOCAL:2 = 0
			ELSE
				LOCAL:2 = LIMIT(255 - 40 * ARG / 10, 55, 255)
			ENDIF
			SETCOLOR LOCAL:0, LOCAL:1, LOCAL:2
		ENDIF
	ENDIF



;양측의 지성을 비교하여, 확률 표시에 사용하는 값(0~10)을 산출한다
;--------------------------------------------------
@INT_EVAL, PC_INT, EN_INT
;RAND_VAR	확률의 편향(偏り) 산출용　RAND_VAR:11은 총화(総和 총계?)
;PC_INT		플레이어 캐릭터 지성
;EN_INT		적 지성
;PER_INT	적 지성에 대한 플레이어 캐릭터 지성의 비율(%)

#DIM RAND_VAR, 12
#DIM PC_INT
#DIM EN_INT
#DIM PER_INT
#DIM LCOUNT

;적마다의 보정
IF ENEMY_TYPE_CHECK_F("AKUOTI") == 1
	LOCAL = 0
ELSEIF ENEMY_TYPE_CHECK_F("BOSS") == 1
	LOCAL = 25 + RAND:50
ELSEIF ENEMY_TYPE_CHECK_F("LASTBOSS") >= 1
	LOCAL = 25 + RAND:75
ELSEIF ENEMY_TYPE_CHECK_F("MOB") == 1
	LOCAL = 50 + RAND:25
ENDIF
;HARDCORE 모드라면 보정 1.5배
SIF GAME_OPTION_CHECK_F(OPTION_hardcore)
	TIMES LOCAL, 1.50
;INSTANT 모드라면 보정 0.75배
SIF GAME_OPTION_CHECK_F(OPTION_easy)
	TIMES LOCAL, 0.75
;SOLO모드라면 보정 반감
SIF GAME_OPTION_CHECK_F(OPTION_solo)
	TIMES LOCAL, 0.50
EN_INT = EN_INT + LOCAL

CALL PERCENT_CAL, PC_INT, EN_INT
PER_INT = RESULT
VARSET RAND_VAR


FOR LCOUNT, 0, 11
	RAND_VAR:LCOUNT = ((LCOUNT * 2 - 10) * (105 - PER_INT) + LCOUNT * 5 + 250) / 33
	;지성비에 따른 보정
	IF PER_INT < 40
		SIF LCOUNT < 3
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 3
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 4
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 5
			TIMES RAND_VAR:LCOUNT, 1.25
		SIF LCOUNT == 6
			TIMES RAND_VAR:LCOUNT, 1.50
		SIF LCOUNT == 7
			TIMES RAND_VAR:LCOUNT, 1.25
	ELSEIF PER_INT < 80
		SIF LCOUNT < 2
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 2
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 3
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 5
			TIMES RAND_VAR:LCOUNT, 1.25
	ELSEIF PER_INT < 120
		SIF LCOUNT == 0
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 1
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 2
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 9
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 10
			TIMES RAND_VAR:LCOUNT, 0.50
	ELSEIF PER_INT < 150
		SIF LCOUNT == 0
			RAND_VAR:LCOUNT = 0
		SIF LCOUNT == 1
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 8
			TIMES RAND_VAR:LCOUNT, 0.75
		SIF LCOUNT == 9
			TIMES RAND_VAR:LCOUNT, 0.50
		SIF LCOUNT == 10
			RAND_VAR:LCOUNT = 0
	ENDIF
	RAND_VAR:11 += RAND_VAR:LCOUNT
NEXT

;DEBUG
;PRINTFORML PER_INT {PER_INT}
;PRINTFORML {RAND_VAR:0} / {RAND_VAR:1} / {RAND_VAR:2} / {RAND_VAR:3} / {RAND_VAR:4} / {RAND_VAR:5} / {RAND_VAR:6} / {RAND_VAR:7} / {RAND_VAR:8} / {RAND_VAR:9} / {RAND_VAR:10}
;PRINTFORML SUM {RAND_VAR:11}

RAND_VAR:11 = RAND:(RAND_VAR:11)

;PRINTFORML ROLL {RAND_VAR:11}

FOR LCOUNT, 0, 11
	SIF RAND_VAR:11 < RAND_VAR:LCOUNT
		BREAK
	RAND_VAR:11 -= RAND_VAR:LCOUNT
NEXT

;PRINTFORML RETURN {LCOUNT - 1}
;PRINTL 

RETURN LCOUNT - 1


;INT_EVAL의 값으로부터, 표시할 예측값(0~100)을 결정한다
;--------------------------------------------------
@INVERSION_PROBABILITY, BLN_VAR, INT_VAR
;BLN_VAR	공격의 유무　불리언(Boolean) 값
;INT_VAR	INT_EVAL의 값
;		0이라면 예측치는 100 혹은 0
;		1이라면 예측치는 90혹은 10 (라고 써져있지만 95 혹은 5인 것 같다)
;			：
;		10이라면 예측치는 50

#DIM BLN_VAR
#DIM INT_VAR
#DIM RES_VAR

IF BLN_VAR
	IF INT_VAR == 0
		RES_VAR = 100
	ELSEIF INT_VAR <= RAND:20
		RES_VAR = 100 - INT_VAR * 5
	ELSEIF RAND:2 == 0
		RES_VAR = -1
	ELSE
		RES_VAR = INT_VAR * 5
	ENDIF
ELSE
	IF INT_VAR == 0
		RES_VAR = 0
	ELSEIF INT_VAR <= RAND:20
		RES_VAR = INT_VAR * 5
	ELSEIF RAND:2 == 0
		RES_VAR = -1
	ELSE
		RES_VAR = 100 - INT_VAR * 5
	ENDIF
ENDIF

RETURN RES_VAR

